## インストールマニュアル

**********************************************************************
 1 想定環境
**********************************************************************

[システム]
OS         : Ubuntu Server 12.04 LTS
Webサーバ  : Apache 2.2
DBシステム : MySQL 5.5
Ruby       : 1.8.7
Rails      : 2.3.4

[アプリケーション]
OSユーザ     : shiojirigomi/pass
RAILS_ROOT   : /var/share/shiojirigomi

MySQL(root)  : root/pass
MySQLユーザ  : shiojirigomi/pass
DB           : shiojirigomi

ホスト名     : shiojirigomi.example.com

**********************************************************************
 2 Ubuntu のインストール
**********************************************************************

Ubuntu Serverをインストールします。

言語・地域・キーボードを選択します。
  ※「日本語」を選択します。

ホスト名を設定します。
  ※「shiojirigomi.example.com」を入力します。

ユーザの設定をします。
  ※フルネームには「shiojirigomi」を入力します。
  ※アカウントには「shiojirigomi」を入力します。
  ※パスワードには「pass」を入力します。
  ※脆弱なパスワードの確認は「はい」を選択します。

  ※パスワードは後ほど、以下のコマンドで環境に応じて適切に設定してください。
      # passwd

  ※ホームディレクトリの暗号化は「いいえ」を選択します。

ディスクの設定をします。
  ※ディスクのパーティショニングは「ディスク全体を使う」を選択します。
    LVMと暗号化は使用しないでよいです。
  ※ディスクへの変更の書き込みは「はい」を選択します。

ファイルのコピーが始まります。

プロキシ環境下ではプロキシを設定します。
  ※プロキシ「http://proxy.example.com:8080/」を入力します。

taskselの設定をします。
  ※システムのアップグレードは「自動的にしない」を選択します。
  ※インストールするソフトウェアは最低限以下のパッケージを選択します。
    スペースキーでチェックします。
      [*] OpenSSH server
      [*] LAMP server
      [*] Samba file server

MySQLの設定をします。
  ※rootユーザのパスワードには「pass」を入力します。

  ※パスワードは後ほど、以下のコマンドで環境に応じて適切に設定してください。
      # mysql -u root -ppass  \
      > -e "set password for root@localhost=password('password');"

GRUBブートローダの設定をします。
  ※GRUBブートローダのインストールは「はい」を選択します。

Ubuntu のインストールが完了します。

ユーザ「shiojirigomi」でログインします。

rootユーザーに変更します。

  $ sudo su -

**********************************************************************
 3 事前準備
**********************************************************************

コンソールの文字化け対策をします。

  # vi .bashrc
  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
  case $TERM in                 #末尾に追加
      linux) LANG=C ;;
      *) LANG=ja_JP.UTF-8 ;;
  esac
  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
  # source .bashrc

プロキシ環境下ではプロキシの設定をします。（念のため）

  # export http_proxy="http://proxy.example.com:8080/"
  # vi /etc/apt/apt.conf
  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
  Acquire {
      http::proxy "http://proxy.example.com:8080/"
  }
  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
  ※ファイルが存在しない場合は新規で作成します。
  ※プロキシサーバーは環境に応じて適切に設定してください。

パッケージをアップグレードします。

  # apt-get update
  # apt-get upgrade

必要なパッケージをインストールします。

  # apt-get install -y  \
  > build-essential libyaml-dev  \
  > libmysql++-dev libmagick++-dev libldap2-dev libsasl2-dev  \
  > libcurl4-openssl-dev apache2-prefork-dev nkf libxslt-dev  \
  > libmysql-ruby mysql-client

**********************************************************************
 4 Samba の設定
**********************************************************************

開放するディレクトリを作成します。

  # mkdir /var/share
  # chown nobody:nogroup /var/share
  # chmod 777 /var/share

設定ファイルを編集します。

  # vi /etc/samba/smb.conf
  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
  [global]
  map to guest = never          #変更

  [share]                       #末尾に追加
  path = /var/share
  writeable = yes
  guest ok = no
  guest only = no
  force create mode = 0755
  force directory mode = 0755
  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

Sambaを再起動します。

  # service smbd restart

Sambaユーザを追加します。

  # pdbedit -a shiojirigomi

  ※パスワードには「pass」を入力します。

**********************************************************************
 5 MySQL の設定
**********************************************************************

文字エンコーディングの標準を UTF-8 に設定します。

  # vi /etc/mysql/my.cnf
  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
  [client]
  default-character-set=utf8    #追加

  [mysqld]
  character-set-server=utf8     #追加
  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

MySQLを再起動します。

  # service mysql restart

**********************************************************************
 6 phpMyAdmin の導入
**********************************************************************

======================================================================
 6.1 phpMyAdmin のインストール
======================================================================

phpMyAdminをインストールします。
  # apt-get install -y phpmyadmin

  ※Webサーバーは「apache2」を選択します。
  ※dbconfig-common は「いいえ」を選択します。

======================================================================
 6.2 Apache の設定
======================================================================
Apacheのデフォルトサイトを phpMyAdmin で使用できるようにします。

  # vi /etc/apache2/sites-available/default
  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
  Listen 8080                   #追加
  NameVirtualHost *:8080        #追加
  <VirtualHost *:8080>          #変更
  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

設定ファイルにエラーがないことを確認し、Apacheを起動します。

  # apache2ctl configtest
  # service apache2 restart

**********************************************************************
 7 Ruby on Rails のインストール
**********************************************************************

======================================================================
 7.1 Ruby のインストール
======================================================================

必要なパッケージをダウンロードします。

  # cd /usr/local/src
  # wget http://ftp.ruby-lang.org/pub/ruby/1.8/ruby-1.8.7-p352.tar.gz

Rubyをインストールします。

  # tar xvzf ruby-1.8.7-p352.tar.gz
  # cd ruby-1.8.7-p352
  # ./configure
  # make && make install

======================================================================
 7.2 gemライブラリ のインストール
======================================================================

rubygemsをインストールします。
  # apt-get install -y rubygems

必要なライブラリをインストールします。

  # gem install rubygems-update -v 1.4.2
  # update_rubygems
  # gem install rails -v 2.3.4
  # gem install amatsuda-i18n_generators -s http://gems.github.com
  # gem install mislav-will_paginate -s http://gems.github.com

rakeのバージョンを 0.8.7 にします。

  # gem uninstall rake
  # gem install rake -v 0.8.7

======================================================================
 7.3 Phusion Passenger のインストール
======================================================================

Phusion Passengerをインストールします。

  # gem install passenger -v 2.2.15
  # passenger-install-apache2-module

  ( 画面の内容を確認して Enterキーを押してください。 )

**********************************************************************
 8 アプリケーションのセットアップ
**********************************************************************
======================================================================
 8.1 ソースコードの設置
======================================================================

Samba経由でソースコードを配置します。

  ※「\\(server)\share\shiojirigomi」となるようにディレクトリをコピーします。

ディレクトリのオーナーを変更します。（念のため）

  # cd /var/share/
  # chown -R shiojirigomi:shiojirigomi /var/share/shiojirigomi

======================================================================
 8.2 データベースの作成
======================================================================

MySQLにデータベースとユーザを作成します。

  # mysql -u root -ppass  \
  > -e "create database shiojirigomi; \
  >     grant all privileges on shiojirigomi.* to shiojirigomi@localhost identified by 'pass';"

  ※ここでは「shiojirigomi」データベースを作成し、ユーザー「shiojirigomi/pass」を作成するものとします。
  ※パスワードは環境に応じて適切に設定してください。

shiojirigomi ユーザに変更します。

  # su - shiojirigomi
  $ cd /var/share/shiojirigomi

DB接続ファイルを編集します。

  $ vi config/database.yml

  ※ここまでに作成したデータベース、ユーザー、パスワードが一致するようにproduction部を編集します。

テーブルを作成し、初期データを登録します。

  $ rake db:setup RAILS_ENV=production

======================================================================
 8.3 Apache の設定
======================================================================

Apacheに設定を追加します。

  $ sudo su -

  # cp /var/share/shiojirigomi/config/sites/passenger.conf \
  > /etc/apache2/conf.d/passenger.conf

  # ln -s /var/share/shiojirigomi/config/sites/apache.conf \
  > /etc/apache2/conf.d/

Apacheの追加モジュールを有効にします。

  # a2enmod headers
  # a2enmod rewrite

設定ファイルにエラーがないことを確認し、Apacheを起動します。

  # apache2ctl configtest
  # service apache2 restart

**********************************************************************
 9 確認
**********************************************************************
======================================================================
 9.1 アプリケーションへのアクセス
======================================================================

ここまでの手順でアプリケーションにアクセスすることができます。

  公開画面   : http://shiojirigomi.example.com/

次のユーザでログインできます。

  ログイン名 : test
  パスワード : test

======================================================================
 9.2 phpMyAdminへのアクセス
======================================================================

phpMyAdminには以下からアクセスすることができます。

  公開画面   : http://shiojirigomi.example.com:8080/phpmyadmin/

  ※MySQLのrootユーザ、または、shiojirigomiユーザでログインできます。

**********************************************************************
